//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECA.Web.CatalogService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseServiceFault", Namespace="ECA.Services.FaultContracts")]
    [System.SerializableAttribute()]
    public partial class BaseServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ECA.CatalogServices", ConfigurationName="CatalogService.ICatalogService")]
    public interface ICatalogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategory", ReplyAction="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ECA.Web.CatalogService.BaseServiceFault), Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryBaseServiceFault", Name="BaseServiceFault")]
        ECA.Model.BookCategory[] GetAllBooksGroupedByCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategory", ReplyAction="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryResponse")]
        System.Threading.Tasks.Task<ECA.Model.BookCategory[]> GetAllBooksGroupedByCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryAsString", ReplyAction="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryAsStringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ECA.Web.CatalogService.BaseServiceFault), Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryAsStringBaseServi" +
            "ceFault", Name="BaseServiceFault")]
        string GetAllBooksGroupedByCategoryAsString(string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryAsString", ReplyAction="ECA.CatalogServices/ICatalogService/GetAllBooksGroupedByCategoryAsStringResponse")]
        System.Threading.Tasks.Task<string> GetAllBooksGroupedByCategoryAsStringAsync(string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetBookDetails", ReplyAction="ECA.CatalogServices/ICatalogService/GetBookDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ECA.Web.CatalogService.BaseServiceFault), Action="ECA.CatalogServices/ICatalogService/GetBookDetailsBaseServiceFault", Name="BaseServiceFault")]
        ECA.Model.Book GetBookDetails(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="ECA.CatalogServices/ICatalogService/GetBookDetails", ReplyAction="ECA.CatalogServices/ICatalogService/GetBookDetailsResponse")]
        System.Threading.Tasks.Task<ECA.Model.Book> GetBookDetailsAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogServiceChannel : ECA.Web.CatalogService.ICatalogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogServiceClient : System.ServiceModel.ClientBase<ECA.Web.CatalogService.ICatalogService>, ECA.Web.CatalogService.ICatalogService {
        
        public CatalogServiceClient() {
        }
        
        public CatalogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ECA.Model.BookCategory[] GetAllBooksGroupedByCategory() {
            return base.Channel.GetAllBooksGroupedByCategory();
        }
        
        public System.Threading.Tasks.Task<ECA.Model.BookCategory[]> GetAllBooksGroupedByCategoryAsync() {
            return base.Channel.GetAllBooksGroupedByCategoryAsync();
        }
        
        public string GetAllBooksGroupedByCategoryAsString(string format) {
            return base.Channel.GetAllBooksGroupedByCategoryAsString(format);
        }
        
        public System.Threading.Tasks.Task<string> GetAllBooksGroupedByCategoryAsStringAsync(string format) {
            return base.Channel.GetAllBooksGroupedByCategoryAsStringAsync(format);
        }
        
        public ECA.Model.Book GetBookDetails(string id) {
            return base.Channel.GetBookDetails(id);
        }
        
        public System.Threading.Tasks.Task<ECA.Model.Book> GetBookDetailsAsync(string id) {
            return base.Channel.GetBookDetailsAsync(id);
        }
    }
}
